$(window).load(function () {
    $(".loading").fadeOut()
})
$(function () {
    echarts_1();
    echarts_2();
    echarts_3();
    echarts_4();
    echarts_5();
    zb1();
    zb2();
    zb3();
    zb4();

    function echarts_1() {
        var myChart = echarts.init(document.getElementById('echart1'));
        option = {
            tooltip: {
                trigger: 'item',
                formatter: "{b} : {c} ({d}%)"
            },
            legend: {
                right: 10,
                top: 30,
                height: 140,
                itemWidth: 10,
                itemHeight: 10,
                itemGap: 10,
                textStyle: {
                    color: 'rgba(255,255,255,.6)',
                    fontSize: 12
                },
                orient: 'vertical',
                data: ['SparkPool', 'Ethermine', 'F2Pool', 'BeePool', 'SpiderPool', '2Miners', 'NanoPool', 'AntPool', 'Others']
            },
            calculable: true,
            series: [
                {
                    name: ' ',
                    color: ['#62c98d', '#2f89cf', '#4cb9cf', '#53b666', '#62c98d', '#205acf', '#c9c862', '#c98b62', '#c962b9', '#7562c9', '#c96262'],
                    type: 'pie',
                    radius: [30, 70],
                    center: ['35%', '50%'],
                    roseType: 'radius',
                    label: {
                        normal: {
                            show: true
                        },
                        emphasis: {
                            show: true
                        }
                    },

                    lableLine: {
                        normal: {
                            show: false
                        },
                        emphasis: {
                            show: true
                        }
                    },

                    data: [
                        {value: 1595, name: 'SparkPool'},
                        {value: 1312, name: 'Ethermine'},
                        {value: 638, name: 'F2Pool'},
                        {value: 283, name: 'BeePool'},
                        {value: 274, name: 'SpiderPool'},
                        {value: 192, name: '2Miners'},
                        // {value:242, name:'NanoPool'},
                        // {value:60, name:'AntPool'},
                        // {value:40, name:'Others'}
                    ]
                },
            ]
        };
        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
    }

    function echarts_2() {
        var myColor = ["#1089E7", "#F57474", "#56D0E3", "#F8B448", "#8B78F6"];
        var myChart = echarts.init(document.getElementById('echart2'));

        option = {
            grid: {
                top: "10%",
                left: '22%',
                bottom: '10%',
                // containLabel: true
            },
            xAxis: {
                // 不显示x轴相关信息
                show: false
            },
            yAxis: [{
                type: 'category',
                // y轴数据反转，与数组的顺序一致
                inverse: true,
                // 不显示y轴线和刻度
                axisLine: {
                    show: false
                },
                axisTick: {
                    show: false
                },
                // 将刻度标签文字设置为白色
                axisLabel: {
                    color: "#fff"
                },
                data: ["BTC(比特币)", "ETH(以太坊)", "ADA(艾达币)", "XRP(瑞波币)", "BCH(比特现金)"]
            }, {
                // y轴数据反转，与数组的顺序一致
                inverse: true,
                show: true,
                // 不显示y轴线和刻度
                axisLine: {
                    show: false
                },
                axisTick: {
                    show: false
                },
                // 将刻度标签文字设置为白色
                axisLabel: {
                    color: "#fff"
                },
                data: [6411, 2917, 1496, 901, 811]
            }],
            series: [{
                // 第一组柱子（条状）
                name: '条',
                type: 'bar',
                // 柱子之间的距离
                barCategoryGap: 50,
                // 柱子的宽度
                barWidth: 10,
                // 层级 相当于z-index
                yAxisIndex: 0,
                // 柱子更改样式
                itemStyle: {
                    barBorderRadius: 20,
                    // 此时的color可以修改柱子的颜色
                    color: function (params) {
                        // params 传进来的是柱子的对象
                        // dataIndex 是当前柱子的索引号
                        // console.log(params);
                        return myColor[params.dataIndex];
                    }
                },
                data: [6411, 2917, 1496, 901, 811],
                // 显示柱子内的百分比文字
                label: {
                    show: true,
                    position: "inside",
                    // {c} 会自动解析为数据（data内的数据）
                    //formatter: "{c}%"
                }
            },
                {
                    // 第二组柱子（框状 border）
                    name: '框',
                    type: 'bar',
                    // 柱子之间的距离
                    barCategoryGap: 50,
                    // 柱子的宽度
                    barWidth: 14,
                    // 层级 相当于z-index
                    yAxisIndex: 1,
                    // 柱子修改样式
                    itemStyle: {
                        color: "none",
                        borderColor: "#00c1de",
                        borderWidth: 2,
                        barBorderRadius: 15,
                    },
                    data: [6411, 2917, 1496, 901, 811]
                }
            ]
        };

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
    }

    function echarts_3() {
        var myChart = echarts.init(document.getElementById('echart3'));
        option = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    lineStyle: {
                        color: '#dddc6b'
                    }
                }
            },
            grid: {
                left: '10',
                top: '20',
                right: '30',
                bottom: '10',
                containLabel: true
            },

            xAxis: [{
                type: 'category',
                boundaryGap: false,
                axisLabel: {
                    textStyle: {
                        color: "rgba(255,255,255,.6)",
                        fontSize: 16,
                    },
                },
                axisLine: {
                    lineStyle: {
                        color: 'rgba(255,255,255,.1)'
                    }

                },

                data: ['2021-05-10T12:00:00.000Z', '2021-05-10T18:00:00.000Z', '2021-05-11T00:00:00.000Z', '2021-05-11T06:00:00.000Z', '2021-05-11T12:00:00.000Z', '2021-05-11T18:00:00.000Z', '2021-05-12T00:00:00.000Z', '2021-05-12T06:00:00.000Z', '2021-05-12T12:00:00.000Z', '2021-05-12T18:00:00.000Z', '2021-05-13T00:00:00.000Z', '2021-05-13T06:00:00.000Z', '2021-05-13T12:00:00.000Z', '2021-05-13T18:00:00.000Z', '2021-05-14T00:00:00.000Z', '2021-05-14T06:00:00.000Z', '2021-05-14T12:00:00.000Z', '2021-05-14T18:00:00.000Z', '2021-05-15T00:00:00.000Z', '2021-05-15T06:00:00.000Z', '2021-05-15T12:00:00.000Z', '2021-05-15T18:00:00.000Z', '2021-05-16T00:00:00.000Z', '2021-05-16T06:00:00.000Z', '2021-05-16T12:00:00.000Z', '2021-05-16T18:00:00.000Z', '2021-05-17T00:00:00.000Z', '2021-05-17T06:00:00.000Z', '2021-05-17T12:00:00.000Z', '2021-05-17T18:00:00.000Z', '2021-05-18T00:00:00.000Z', '2021-05-18T06:00:00.000Z', '2021-05-18T12:00:00.000Z', '2021-05-18T18:00:00.000Z', '2021-05-19T00:00:00.000Z', '2021-05-19T06:00:00.000Z', '2021-05-19T12:00:00.000Z', '2021-05-19T18:00:00.000Z', '2021-05-20T00:00:00.000Z', '2021-05-20T06:00:00.000Z', '2021-05-20T12:00:00.000Z', '2021-05-20T18:00:00.000Z', '2021-05-21T00:00:00.000Z', '2021-05-21T06:00:00.000Z', '2021-05-21T12:00:00.000Z', '2021-05-21T18:00:00.000Z', '2021-05-22T00:00:00.000Z', '2021-05-22T06:00:00.000Z', '2021-05-22T12:00:00.000Z', '2021-05-22T18:00:00.000Z', '2021-05-23T00:00:00.000Z', '2021-05-23T06:00:00.000Z', '2021-05-23T12:00:00.000Z', '2021-05-23T18:00:00.000Z', '2021-05-24T00:00:00.000Z', '2021-05-24T06:00:00.000Z', '2021-05-24T12:00:00.000Z', '2021-05-24T18:00:00.000Z', '2021-05-25T00:00:00.000Z', '2021-05-25T06:00:00.000Z', '2021-05-25T12:00:00.000Z', '2021-05-25T18:00:00.000Z', '2021-05-26T00:00:00.000Z', '2021-05-26T06:00:00.000Z', '2021-05-26T12:00:00.000Z', '2021-05-26T18:00:00.000Z', '2021-05-27T00:00:00.000Z', '2021-05-27T06:00:00.000Z', '2021-05-27T12:00:00.000Z', '2021-05-27T18:00:00.000Z', '2021-05-28T00:00:00.000Z', '2021-05-28T06:00:00.000Z', '2021-05-28T12:00:00.000Z', '2021-05-28T18:00:00.000Z', '2021-05-29T00:00:00.000Z', '2021-05-29T06:00:00.000Z', '2021-05-29T12:00:00.000Z', '2021-05-29T18:00:00.000Z', '2021-05-30T00:00:00.000Z', '2021-05-30T06:00:00.000Z', '2021-05-30T12:00:00.000Z', '2021-05-30T18:00:00.000Z', '2021-05-31T00:00:00.000Z', '2021-05-31T06:00:00.000Z', '2021-05-31T12:00:00.000Z', '2021-05-31T18:00:00.000Z', '2021-06-01T00:00:00.000Z', '2021-06-01T06:00:00.000Z', '2021-06-01T12:00:00.000Z', '2021-06-01T18:00:00.000Z', '2021-06-02T00:00:00.000Z', '2021-06-02T06:00:00.000Z', '2021-06-02T12:00:00.000Z', '2021-06-02T18:00:00.000Z', '2021-06-03T00:00:00.000Z', '2021-06-03T06:00:00.000Z', '2021-06-03T12:00:00.000Z', '2021-06-03T18:00:00.000Z', '2021-06-04T00:00:00.000Z', '2021-06-04T06:00:00.000Z', '2021-06-04T12:00:00.000Z', '2021-06-04T18:00:00.000Z', '2021-06-05T00:00:00.000Z', '2021-06-05T06:00:00.000Z', '2021-06-05T12:00:00.000Z', '2021-06-05T18:00:00.000Z', '2021-06-06T00:00:00.000Z', '2021-06-06T06:00:00.000Z', '2021-06-06T12:00:00.000Z', '2021-06-06T18:00:00.000Z', '2021-06-07T00:00:00.000Z', '2021-06-07T06:00:00.000Z', '2021-06-07T12:00:00.000Z', '2021-06-07T18:00:00.000Z', '2021-06-08T00:00:00.000Z', '2021-06-08T06:00:00.000Z', '2021-06-08T12:00:00.000Z', '2021-06-08T18:00:00.000Z', '2021-06-09T00:00:00.000Z', '2021-06-09T06:00:00.000Z'
                ].map(d => {

                    var a = new Date(d)
                    var y = a.getFullYear();
                    var m = a.getMonth() + 1;
                    var d = a.getDate();
                    var h = a.getHours();
                    var mm = a.getMinutes();
                    var date2 = y + '/' + m + '/' + d + ' ' + h + ':' + mm;
                    return date2;
                }),
            }, {
                axisPointer: {show: false},
                axisLine: {show: false},
                position: 'bottom',
                offset: 20,
            }],

            yAxis: [{
                type: 'value',
                axisTick: {show: false},
                axisLine: {
                    lineStyle: {
                        color: 'rgba(255,255,255,.1)'
                    }
                },
                axisLabel: {
                    textStyle: {
                        color: "rgba(255,255,255,.6)",
                        fontSize: 16,
                    },
                },

                splitLine: {
                    lineStyle: {
                        color: 'rgba(255,255,255,.1)'
                    }
                }
            }],
            series: [
                {
                    name: '每日收益',
                    type: 'line',
                    smooth: true,
                    symbol: 'circle',
                    symbolSize: 5,
                    showSymbol: false,
                    lineStyle: {

                        normal: {
                            color: '#dddc6b',
                            width: 4
                        }
                    },
                    areaStyle: {
                        normal: {
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                offset: 0,
                                color: 'rgba(221, 220, 107, 0.4)'
                            }, {
                                offset: 0.8,
                                color: 'rgba(221, 220, 107, 0.1)'
                            }], false),
                            shadowColor: 'rgba(0, 0, 0, 0.1)',
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#dddc6b',
                            borderColor: 'rgba(221, 220, 107, .1)',
                            borderWidth: 12
                        }
                    },
                    data: [0.007518194444444447, 0.0070020833333333315, 0.006941527777777777, 0.006127638888888882, 0.007553888888888894, 0.006879444444444443, 0.006548472222222222, 0.005189444444444444, 0.00729972222222222, 0.007759027777777778, 0.005869444444444448, 0.004742638888888892, 0.004899027777777778, 0.0042973611111111094, 0.0037407246376811613, 0.0039509589041095885, 0.004663098591549298, 0.004182500000000002, 0.003985972222222221, 0.0035831944444444453, 0.0037218055555555555, 0.0034682352941176465, 0.0030091666666666656, 0.002965277777777778, 0.003319861111111112, 0.004152083333333334, 0.0037450000000000005, 0.0034338888888888865, 0.0035851388888888907, 0.003966250000000001, 0.003213472222222224, 0.0031902777777777767, 0.0037606944444444463, 0.0037458333333333332, 0.004360555555555557, 0.004707222222222218, 0.013005352112676054, 0.005504444444444441, 0.0057700000000000026, 0.003545972222222222, 0.004181944444444442, 0.0034481944444444456, 0.0030040277777777778, 0.002984722222222222, 0.0047777777777777775, 0.0048600000000000015, 0.003263750000000002, 0.0032066666666666684, 0.003039861111111111, 0.002900416666666665, 0.0028140277777777773, 0.003790555555555558, 0.006479027777777779, 0.004315138888888887, 0.0030594444444444423, 0.003146527777777779, 0.0036880555555555534, 0.003456527777777779, 0.0029813888888888893, 0.0029343055555555563, 0.0030591666666666658, 0.0030505555555555538, 0.0029833333333333313, 0.0028251388888888883, 0.003084861111111112, 0.003097638888888889, 0.0029404166666666663, 0.0027138888888888876, 0.002978888888888887, 0.0029329166666666687, 0.0028762500000000003, 0.0028870833333333352, 0.0029931944444444455, 0.0029379166666666633, 0.0027573611111111097, 0.0027283098591549316, 0.0029258333333333345, 0.0028225000000000012, 0.0026581944444444426, 0.002686944444444446, 0.00265263888888889, 0.0027244444444444456, 0.002618749999999999, 0.0026366666666666643, 0.002984166666666667, 0.0028038888888888905, 0.0026891549295774645, 0.002702916666666667, 0.0028651388888888906, 0.0029238888888888878, 0.002777638888888888, 0.0027286111111111135, 0.002824305555555554, 0.002818611111111111, 0.002652083333333332, 0.0027, 0.0029011111111111095, 0.0028961111111111123, 0.0028360563380281706, 0.0027037142857142837, 0.0026920833333333345, 0.0026080555555555566, 0.002488333333333333, 0.0024615277777777765, 0.0025472222222222216, 0.0025531944444444434, 0.0024776388888888895, 0.0024450000000000014, 0.0024566197183098592, 0.00246375, 0.00237611111111111, 0.002412816901408448, 0.002553661971830988, 0.0027281690140845056, 0.0025722222222222205, 0.002511014492753622, 0.002896760563380281, 0.0026797222222222253, 0.002498028169014086, 0.0024889473684210524
                    ],
                },]
        };

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
    }

    function echarts_4() {

        var data1 = splitData([[1623619800000, 2537.47, 108, 56677], [1623620700000, 2522.43, 55, 56785], [1623621600000, 2516.22, 251, 56840], [1623622500000, 2506.03, 0, 57091], [1623623400000, 2519.98, 0, 56995], [1623624300000, 2519.49, 0, 56849], [1623625200000, 2499.44, 166, 56636], [1623626100000, 2506.71, 216, 56802], [1623627000000, 2495.37, 144, 57018], [1623627900000, 2507.86, 375, 57162], [1623628800000, 2492.49, 675, 57537], [1623629700000, 2501.98, 217, 58212], [1623630600000, 2499.44, 90, 58429], [1623631500000, 2497.12, 3, 58519], [1623632400000, 2487.4, 0, 58522], [1623633300000, 2498.49, 249, 58227], [1623634200000, 2500.25, 1126, 58476], [1623635100000, 2501.88, 393, 59602], [1623636000000, 2509.2, 74, 59995], [1623636900000, 2497.12, 227, 60069], [1623637800000, 2494.76, 0, 60296], [1623638700000, 2499.01, 0, 60272], [1623639600000, 2489.94, 0, 60124], [1623640500000, 2478.86, 0, 60043], [1623641400000, 2470.13, 0, 59232], [1623642300000, 2478.44, 0, 58576], [1623643200000, 2471, 0, 58153], [1623644100000, 2482.74, 191, 57758], [1623645000000, 2481.85, 106, 57949], [1623645900000, 2488.54, 0, 58055], [1623646800000, 2493.45, 0, 57782], [1623647700000, 2494.38, 0, 57522], [1623648600000, 2504.85, 0, 57075], [1623649500000, 2496.71, 0, 56916], [1623650400000, 2489.49, 0, 56645], [1623651300000, 2492.15, 0, 56201], [1623652200000, 2492.03, 0, 55988], [1623653100000, 2504.32, 0, 55724], [1623654000000, 2499.47, 51, 55445], [1623654900000, 2499.3, 0, 55496], [1623655800000, 2499.07, 0, 55214], [1623656700000, 2498.48, 0, 54893], [1623657600000, 2478.68, 3, 54582], [1623658500000, 2483.11, 0, 54585], [1623659400000, 2479.58, 0, 54508], [1623660300000, 2477.19, 0, 53812], [1623661200000, 2476.96, 0, 53812], [1623662100000, 2481.6, 8, 53523], [1623663000000, 2478.06, 0, 53531], [1623663900000, 2471.85, 0, 53468], [1623664800000, 2479.29, 0, 53067], [1623665700000, 2484.5, 0, 52877], [1623666600000, 2491.4, 0, 52724], [1623667500000, 2489.5, 0, 52637], [1623668400000, 2485.9, 0, 52430], [1623669300000, 2481.4, 0, 52253], [1623670200000, 2480.25, 0, 52137], [1623671100000, 2479.11, 0, 51934], [1623672000000, 2475.01, 0, 51721], [1623672900000, 2482.21, 44, 51177], [1623673800000, 2492.94, 76, 51221], [1623674700000, 2492.55, 179, 51297], [1623675600000, 2529.18, 778, 51476], [1623676500000, 2537.2, 905, 52254], [1623677400000, 2565.11, 652, 53159], [1623678300000, 2556.58, 445, 53811], [1623679200000, 2560.09, 174, 54256], [1623680100000, 2574.74, 0, 54430], [1623681000000, 2567.52, 0, 54368], [1623681900000, 2555.37, 37, 54262], [1623682800000, 2549.94, 0, 54299], [1623683700000, 2548.88, 0, 54164], [1623684600000, 2550.68, 0, 53896], [1623685500000, 2574.91, 0, 53538], [1623686400000, 2584.33, 606, 53235], [1623687300000, 2591.29, 0, 53841], [1623688200000, 2559.06, 0, 53099], [1623689100000, 2577.37, 0, 52975], [1623690000000, 2570.77, 0, 52942], [1623690900000, 2568.21, 0, 52928], [1623691800000, 2570.93, 0, 52890], [1623692700000, 2571.99, 0, 52716], [1623693600000, 2570.37, 0, 52184], [1623694500000, 2565.24, 0, 52010], [1623695400000, 2548.55, 0, 51575], [1623696300000, 2534.68, 316, 51465], [1623697200000, 2526.65, 420, 51781], [1623698100000, 2528.3, 246, 52201], [1623699000000, 2537.57, 206, 52447], [1623699900000, 2538.39, 49, 52653], [1623700800000, 2540.76, 0, 52702], [1623701700000, 2542.02, 0, 50868], [1623702600000, 2541.66, 0, 50035], [1623703500000, 2539.86, 0, 49369], [1623704400000, 2563.5, 0, 48845], [1623705300000, 2557.77, 0, 48586], [1623706200000, 2561.61, 0, 48375], [1623707100000, 2570.11, 0, 48122], [1623708000000, 2565.13, 0, 48055], [1623708900000, 2559.13, 0, 47971], [1623709800000, 2559.81, 199, 47965], [1623710700000, 2556.58, 192, 48164], [1623711600000, 2565.22, 0, 48356], [1623712500000, 2571.97, 20, 48182], [1623713400000, 2576.86, 0, 48202], [1623714300000, 2581.43, 0, 48172], [1623715200000, 2591.27, 0, 47930], [1623716100000, 2612.01, 0, 47592], [1623717000000, 2618.36, 0, 47469], [1623717900000, 2596.62, 0, 47464], [1623718800000, 2587.45, 0, 47419], [1623719700000, 2593.13, 0, 47376], [1623720600000, 2583.67, 0, 47162], [1623721500000, 2572.37, 0, 46004], [1623722400000, 2583.22, 0, 45610], [1623723300000, 2593.91, 0, 45540], [1623724200000, 2585.12, 0, 45286], [1623725100000, 2586.97, 13, 45270], [1623726000000, 2585.82, 0, 45283], [1623726900000, 2586.03, 3, 45256]]
        );

        function splitData(rawData) {
            var categoryData = [];
            var date1 = null;
            var date2 = null;
            var values = [];

            for (var i = 0; i < rawData.length; i++) {

                date1 = new Date(rawData[i][0]);
                var y = date1.getFullYear();
                var m = date1.getMonth() + 1;
                var d = date1.getDate();
                var h = date1.getHours();
                var mm = date1.getMinutes();
                date2 = y + '/' + m + '/' + d + ' ' + h + ':' + mm;
                // categoryData.push(rawData[i].splice(0, 1)[0]);
                categoryData.push(date2)
                values.push(rawData[i][1])
            }
            return {
                categoryData: categoryData,
                values: values,
            };
        }

        var myChart = echarts.init(document.getElementById('echart4'));
        option = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'cross',
                    lineStyle: {
                        color: '#ab68f8'
                    }
                }
            },
            grid: {
                left: '60',
                top: '20',
                right: '30',
                bottom: '10',
                containLabel: true
            },

            xAxis: [{
                type: 'category',
                boundaryGap: false,
                axisLabel: {
                    textStyle: {
                        color: "rgba(255,255,255,.6)",
                        fontSize: 16,
                    },
                },
                axisLine: {
                    lineStyle: {
                        color: 'rgba(255,255,255,.1)'
                    }
                },
                data: data1.categoryData
            }, {
                axisPointer: {show: false},
                axisLine: {show: false},
                position: 'bottom',
                offset: 20,
            }],

            yAxis: [{
                type: 'value',
                scale: true,
                axisTick: {show: false},
                axisLine: {
                    lineStyle: {
                        color: 'rgba(255,255,255,.1)'
                    }
                },
                axisLabel: {
                    textStyle: {
                        color: "rgba(255,255,255,.6)",
                        fontSize: 16,
                    },
                },

                splitLine: {
                    lineStyle: {
                        color: 'rgba(255,255,255,.1)'
                    }
                }
            }],
            series: [
                {
                    name: 'ETH/USDT',
                    type: 'line',
                    smooth: false,
                    symbol: 'circle',
                    symbolSize: 5,
                    showSymbol: false,
                    lineStyle: {
                        normal: {
                            color: '#c213f1',
                            width: 4
                        }
                    },
                    areaStyle: {
                        normal: {
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                offset: 0,
                                color: 'rgba(134,24,227,0.73)'
                            }, {
                                offset: 0.8,
                                color: 'rgba(41,21,147,0.39)'
                            }], false),
                            shadowColor: 'rgba(0, 0, 0, 0.1)',
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: '#6430dc',
                            borderColor: 'rgba(221, 220, 107, .1)',
                            borderWidth: 12
                        }
                    },
                    data: data1.values,
                },

            ]
        };

        /*   */
        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
    }

    function echarts_5() {
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echart5'));
        option = {
            //  backgroundColor: '#00265f',
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            legend: {
                data: ['算力(TH/s)', '币价($)'],
                align: 'right',
                right: '40%',
                top: '0%',
                textStyle: {
                    color: "#fff",
                    fontSize: '16',

                },
                itemGap: 35
            },
            grid: {
                left: '0%',
                top: '40px',
                right: '0%',
                bottom: '5%',
                containLabel: true
            },
            xAxis: [{
                type: 'category',
                data: ['2021-05-10T12:00:00.000Z', '2021-05-10T18:00:00.000Z', '2021-05-11T00:00:00.000Z', '2021-05-11T06:00:00.000Z', '2021-05-11T12:00:00.000Z', '2021-05-11T18:00:00.000Z', '2021-05-12T00:00:00.000Z', '2021-05-12T06:00:00.000Z', '2021-05-12T12:00:00.000Z', '2021-05-12T18:00:00.000Z', '2021-05-13T00:00:00.000Z', '2021-05-13T06:00:00.000Z', '2021-05-13T12:00:00.000Z', '2021-05-13T18:00:00.000Z', '2021-05-14T00:00:00.000Z', '2021-05-14T06:00:00.000Z', '2021-05-14T12:00:00.000Z', '2021-05-14T18:00:00.000Z', '2021-05-15T00:00:00.000Z', '2021-05-15T06:00:00.000Z', '2021-05-15T12:00:00.000Z', '2021-05-15T18:00:00.000Z', '2021-05-16T00:00:00.000Z', '2021-05-16T06:00:00.000Z', '2021-05-16T12:00:00.000Z', '2021-05-16T18:00:00.000Z', '2021-05-17T00:00:00.000Z', '2021-05-17T06:00:00.000Z', '2021-05-17T12:00:00.000Z', '2021-05-17T18:00:00.000Z', '2021-05-18T00:00:00.000Z', '2021-05-18T06:00:00.000Z', '2021-05-18T12:00:00.000Z', '2021-05-18T18:00:00.000Z', '2021-05-19T00:00:00.000Z', '2021-05-19T06:00:00.000Z', '2021-05-19T12:00:00.000Z', '2021-05-19T18:00:00.000Z', '2021-05-20T00:00:00.000Z', '2021-05-20T06:00:00.000Z', '2021-05-20T12:00:00.000Z', '2021-05-20T18:00:00.000Z', '2021-05-21T00:00:00.000Z', '2021-05-21T06:00:00.000Z', '2021-05-21T12:00:00.000Z', '2021-05-21T18:00:00.000Z', '2021-05-22T00:00:00.000Z', '2021-05-22T06:00:00.000Z', '2021-05-22T12:00:00.000Z', '2021-05-22T18:00:00.000Z', '2021-05-23T00:00:00.000Z', '2021-05-23T06:00:00.000Z', '2021-05-23T12:00:00.000Z', '2021-05-23T18:00:00.000Z', '2021-05-24T00:00:00.000Z', '2021-05-24T06:00:00.000Z', '2021-05-24T12:00:00.000Z', '2021-05-24T18:00:00.000Z', '2021-05-25T00:00:00.000Z', '2021-05-25T06:00:00.000Z', '2021-05-25T12:00:00.000Z', '2021-05-25T18:00:00.000Z', '2021-05-26T00:00:00.000Z', '2021-05-26T06:00:00.000Z', '2021-05-26T12:00:00.000Z', '2021-05-26T18:00:00.000Z', '2021-05-27T00:00:00.000Z', '2021-05-27T06:00:00.000Z', '2021-05-27T12:00:00.000Z', '2021-05-27T18:00:00.000Z', '2021-05-28T00:00:00.000Z', '2021-05-28T06:00:00.000Z', '2021-05-28T12:00:00.000Z', '2021-05-28T18:00:00.000Z', '2021-05-29T00:00:00.000Z', '2021-05-29T06:00:00.000Z', '2021-05-29T12:00:00.000Z', '2021-05-29T18:00:00.000Z', '2021-05-30T00:00:00.000Z', '2021-05-30T06:00:00.000Z', '2021-05-30T12:00:00.000Z', '2021-05-30T18:00:00.000Z', '2021-05-31T00:00:00.000Z', '2021-05-31T06:00:00.000Z', '2021-05-31T12:00:00.000Z', '2021-05-31T18:00:00.000Z', '2021-06-01T00:00:00.000Z', '2021-06-01T06:00:00.000Z', '2021-06-01T12:00:00.000Z', '2021-06-01T18:00:00.000Z', '2021-06-02T00:00:00.000Z', '2021-06-02T06:00:00.000Z', '2021-06-02T12:00:00.000Z', '2021-06-02T18:00:00.000Z', '2021-06-03T00:00:00.000Z', '2021-06-03T06:00:00.000Z', '2021-06-03T12:00:00.000Z', '2021-06-03T18:00:00.000Z', '2021-06-04T00:00:00.000Z', '2021-06-04T06:00:00.000Z', '2021-06-04T12:00:00.000Z', '2021-06-04T18:00:00.000Z', '2021-06-05T00:00:00.000Z', '2021-06-05T06:00:00.000Z', '2021-06-05T12:00:00.000Z', '2021-06-05T18:00:00.000Z', '2021-06-06T00:00:00.000Z', '2021-06-06T06:00:00.000Z', '2021-06-06T12:00:00.000Z', '2021-06-06T18:00:00.000Z', '2021-06-07T00:00:00.000Z', '2021-06-07T06:00:00.000Z', '2021-06-07T12:00:00.000Z', '2021-06-07T18:00:00.000Z', '2021-06-08T00:00:00.000Z', '2021-06-08T06:00:00.000Z', '2021-06-08T12:00:00.000Z', '2021-06-08T18:00:00.000Z', '2021-06-09T00:00:00.000Z', '2021-06-09T06:00:00.000Z'
                ].map(d => {

                    var a = new Date(d)
                    var y = a.getFullYear();
                    var m = a.getMonth() + 1;
                    var dd = a.getDate();
                    var h = a.getHours();
                    var mm = a.getMinutes();
                    var date2 = y + '/' + m + '/' + dd + ' ' + h + ':' + mm;
                    return date2;
                }),
                axisLine: {
                    show: false,
                    lineStyle: {
                        color: "rgba(255,255,255,.1)",
                        width: 1,
                        type: "solid"
                    },
                },
                axisTick: {
                    show: false,
                },
                axisLabel: {
                    interval: 50,
                    show: true,
                    splitNumber: 15,
                    textStyle: {
                        color: "rgba(255,255,255,.6)",
                        fontSize: '16',
                    },
                },
            }],
            yAxis: [
                {
                name: '算力(Hash/s)',
                type: 'value',
                axisLabel: {
                    //formatter: '{value} %'
                    show: true,
                    textStyle: {
                        color: "rgba(255,255,255,.6)",
                        fontSize: '16',
                    },
                },
                axisTick: {
                    show: false,
                },
                axisLine: {
                    show: true,
                    lineStyle: {
                        color: "rgba(255,255,255,.1	)",
                        width: 1,
                        type: "solid"
                    },
                },
                splitLine: {
                    lineStyle: {
                        color: "rgba(255,255,255,.1)",
                    }
                }
            }, {
                name: '币价($)',
                type: 'value',
                axisLabel: {
                    //formatter: '{value} %'
                    show: true,
                    textStyle: {
                        color: "rgba(255,255,255,.6)",
                        fontSize: '16',
                    },
                },
                axisTick: {
                    show: false,
                },
                axisLine: {
                    show: true,
                    lineStyle: {
                        color: "rgba(255,255,255,.1	)",
                        width: 1,
                        type: "solid"
                    },
                },
                splitLine: {
                    lineStyle: {
                        color: "rgba(255,255,255,.1)",
                    }
                }
            }],
            series: [{
                name: '算力(TH/s)',
                type: 'line',

                data: [5.9293506007079E14, 5.99767233947637E14, 6.03418122263766E14, 6.05940981970996E14, 6.11332275966064E14, 6.05394663226526E14, 6.07751193592941E14, 6.08638131253233E14, 6.09143843635288E14, 6.05082834192096E14, 6.02314489270364E14, 6.00658688489719E14, 5.99567217400322E14, 6.12476090171344E14, 6.21104117266483E14, 6.17504036370452E14, 6.21765665524077E14, 6.21434077098211E14, 6.16274359293277E14, 6.15532249084806E14, 6.12995997187778E14, 6.12695802943928E14, 6.21479798964057E14, 6.28088231269119E14, 6.31101940967388E14, 6.30422528683958E14, 6.2311349033291E14, 6.15897958438378E14, 6.15722356441339E14, 6.16709502887378E14, 6.15358975403023E14, 6.21995641010337E14, 6.25530223894142E14, 6.25983942398474E14, 6.31343092861399E14, 6.31688332147797E14, 6.34359849646213E14, 6.33644927028411E14, 6.27250463341995E14, 6.33020944739656E14, 6.38128433629233E14, 6.41995690809736E14, 6.50550587728313E14, 6.45925747569176E14, 6.31229407432739E14, 6.25318278907057E14, 6.19308440142885E14, 6.14962644192358E14, 6.18420889113739E14, 6.18387755756777E14, 6.20652560391012E14, 6.20682803122952E14, 6.16023855261875E14, 6.15806906395534E14, 6.12762846321042E14, 6.08861060438182E14, 6.07911033347376E14, 6.06932635192822E14, 6.06944805812032E14, 6.10186236231644E14, 6.15174431975093E14, 6.10433263835882E14, 6.06215922280535E14, 6.09367014647342E14, 6.06111668496606E14, 6.07670745332001E14, 6.09378543501732E14, 6.114119804223E14, 6.08114871658671E14, 6.00744912718209E14, 5.97720153567782E14, 5.92112054553117E14, 5.95472087256873E14, 5.98776479263159E14, 5.98661106060703E14, 5.95164258348693E14, 5.93221139049801E14, 5.96041954904736E14, 5.99748592147512E14, 6.01738437706501E14, 6.0698747512519E14, 6.04547733515455E14, 6.028928451974E14, 6.0437017653602E14, 5.99659216406701E14, 5.99580117370709E14, 5.98918106246384E14, 5.9112294785193E14, 5.86357304368313E14, 5.86230620637074E14, 5.79545388282575E14, 5.81419688931269E14, 5.90893858398487E14, 5.94204153225457E14, 6.0321595322113E14, 6.10004148745523E14, 6.06133535886168E14, 6.01604085078461E14, 5.97471461435906E14, 5.95615867991403E14, 5.99434131374866E14, 6.10772118658579E14, 6.18473208158211E14, 6.23364887172362E14, 6.19465933290196E14, 6.10222248466232E14, 6.04847209970965E14, 6.03090565453836E14, 6.08667855520901E14, 6.14070620490039E14, 6.22953661949048E14, 6.24468607234022E14, 6.20474953124312E14, 6.17621867812124E14, 6.16363451961829E14, 6.14054791797756E14, 6.17000300311771E14, 6.19606831242859E14, 6.16096603970039E14, 6.18285917793979E14
                ].map(d => {
                    var a = d / 1000000000000;
                    return a;
                }),

                itemStyle: {
                    normal: {
                        color: '#2f89cf',
                        opacity: 1,

                        barBorderRadius: 5,
                    }
                }
            }, {
                name: '币价($)',
                type: 'line',
                data: [4130.847114013888, 4015.18684325, 3886.6263129861118, 3971.367344333334, 3989.0259242777774, 4098.434004749999, 4243.765296791667, 4292.447558152779, 4236.923080125, 4072.725162, 3939.798520027778, 3854.4395627222225, 3785.7903286805554, 3693.5370211805566, 3812.488492536232, 3912.4648401506856, 4067.4065568028163, 4059.3178783055546, 4058.2586632499992, 3914.0687215694456, 3855.219820847223, 3758.628982367645, 3801.358424027778, 3831.0768368750014, 3671.5033180416667, 3492.2176769444445, 3373.1456686527767, 3479.204572375, 3361.8027495555543, 3327.7682581805548, 3410.9747267777775, 3502.046391430555, 3393.5009011527764, 3393.2573035416667, 3157.5556217222224, 2915.7528499444434, 2608.685574323944, 2612.7111612777767, 2438.2584446818187, 2684.7572011111106, 2841.0235204166656, 2793.1827429722225, 2834.373392097223, 2719.6852608055556, 2571.194284958334, 2369.721660402777, 2366.4774970833337, 2320.505300875, 2382.1376357777776, 2327.0086465, 2309.581317527778, 2131.307007722223, 1937.2825605277783, 2032.2580278750004, 2141.1350726527785, 2253.635087194444, 2439.3865101805545, 2599.9487245833348, 2626.5684369166684, 2567.7039927500005, 2549.813258986111, 2607.738366166667, 2776.9063957222224, 2847.2302830833346, 2765.7688959305565, 2785.252676444445, 2726.7878006944447, 2768.484946736111, 2814.4457665694445, 2763.5047524583347, 2702.6256304166673, 2523.5773368333334, 2545.575769652778, 2447.6569633750005, 2507.7825722916664, 2469.832721084507, 2360.6623668749994, 2260.3908088749995, 2270.3032675833338, 2421.600355111111, 2392.8200047222217, 2431.630650569445, 2322.969516486112, 2476.7042517777777, 2579.7476288750004, 2627.9284819166674, 2672.267977661972, 2619.07188038889, 2579.351568097222, 2579.1920521111115, 2610.0403649305567, 2679.083710722221, 2748.248086611112, 2735.8691866527774, 2723.589532375, 2843.235153929578, 2808.0025582638887, 2822.1784548194455, 2747.4557191126746, 2634.451070985715, 2649.9409344027786, 2706.1149191250006, 2762.5677236527777, 2760.1921519166667, 2630.0467329305557, 2609.0119937777777, 2668.5685655416655, 2703.6519110277777, 2701.8415228450694, 2695.1261967083346, 2772.230503472222, 2784.765428746479, 2786.2408365211263, 2663.240030943662, 2540.332041083333, 2508.8663843913055, 2430.5649541690136, 2505.2429329861106, 2459.0006863521116, 2513.5458994210526
                ],
                yAxisIndex: 1,
                barWidth: '15',
                // barGap: 1,
                itemStyle: {
                    normal: {
                        color: '#62c98d',
                        opacity: 1,
                        barBorderRadius: 5,
                    }
                }
            },
            ]
        };


        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
    }

    function zb1() {
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('zb1'));
        var v = Math.floor(Math.random() * (100 - 60 + 1) + 60);
        var v1 = v
        var v2 = 100 - v
        var v3 = v1 + v2
        option = {
            graphic:{       //图形中间文字
                type:"text",
                left:"center",
                bottom:"33%",
                style:{
                    text:"CPU占用",
                    textAlign:"center",
                    fill:"#fff",
                    fontSize:15
                }},
            series: [{
                type: 'pie',
                radius: ['60%', '70%'],
                color: '#49bcf7',
                label: {
                    normal: {
                        position: 'center'
                    }
                },
                data: [{
                    value: v1,
                    name: 'CPU占用率',
                    label: {
                        normal: {
                            formatter: Math.round(v1 / v3 * 100) + '%',
                            textStyle: {
                                fontSize: 30,
                                color: '#fff',
                            }
                        }
                    }
                },
                    {
                        value: v2,
                        label: {
                            normal: {
                                formatter: function (params) {
                                    return 'CPU占用率'
                                },
                                textStyle: {
                                    color: '#aaa',
                                    fontSize: 16
                                }
                            }
                        },
                        itemStyle: {
                            normal: {
                                color: 'rgba(255,255,255,.2)'
                            },
                            emphasis: {
                                color: '#fff'
                            }
                        },
                    }]
            }]
        };

        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
        setTimeout(zb1, 1000);
    }

    function zb2() {
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('zb2'));
        var v = Math.floor(Math.random() * (100 - 95 + 1) + 95);
        var v1 = v
        var v2 = 100 - v
        var v3 = v1 + v2
        option = {
            graphic:{       //图形中间文字
                type:"text",
                left:"center",
                bottom:"33%",
                style:{
                    text:"GPU占用",
                    textAlign:"center",
                    fill:"#fff",
                    fontSize:15
                }},

//animation: false,
            series: [{
                type: 'pie',
                radius: ['60%', '70%'],
                color: '#49bcf7',
                label: {
                    normal: {
                        position: 'center'
                    }
                },
                data: [{
                    value: v1,
                    name: 'GPU占用率',
                    label: {
                        normal: {
                            formatter: Math.round(v1 / v3 * 100) + '%',
                            textStyle: {
                                fontSize: 24,
                                color: '#fff',
                            }
                        }
                    }
                }, {
                    value: v2,
                    label: {
                        normal: {
                            formatter: function (params) {
                                return 'GPU占用率'
                            },
                            textStyle: {
                                color: '#aaa',
                                fontSize: 16
                            }
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: 'rgba(255,255,255,.2)'
                        },
                        emphasis: {
                            color: '#fff'
                        }
                    },
                }]
            }]
        };

        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
        setTimeout(zb2, 1000);
    }

    function zb3() {
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('zb3'));
        var v = Math.floor(Math.random() * (100 - 70 + 1) + 70);
        var v1 = v
        var v2 = 100 - v
        var v3 = v1 + v2
        option = {
            graphic:{       //图形中间文字
                type:"text",
                left:"center",
                bottom:"33%",
                style:{
                    text:"内存占用",
                    textAlign:"center",
                    fill:"#fff",
                    fontSize:15
                }},
            series: [{

                type: 'pie',
                radius: ['60%', '70%'],
                color: '#62c98d',
                label: {
                    normal: {
                        position: 'center'
                    }
                },
                data: [{
                    value: v1,
                    name: '内存占用率',
                    label: {
                        normal: {
                            formatter: Math.round(v1 / v3 * 100) + '%',
                            textStyle: {
                                fontSize: 24,
                                color: '#fff',
                            }
                        }
                    }
                }, {
                    value: v2,
                    label: {
                        normal: {
                            formatter: function (params) {
                                return '内存占用率'
                            },
                            textStyle: {
                                color: '#aaa',
                                fontSize: 16
                            }
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: 'rgba(255,255,255,.2)'
                        },
                        emphasis: {
                            color: '#fff'
                        }
                    },
                }]
            }]
        };
        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
        setTimeout(zb3, 1000);
    }

    function zb4() {
        var myChart = echarts.init(document.getElementById('zb4'));
        var v = Math.floor(Math.random() * (85 - 75 + 1) + 75);
        var v1 = v
        var v2 = 100 - v
        var v3 = v1 + v2
        option = {
            graphic:{       //图形中间文字
                type:"text",
                left:"center",
                bottom:"33%",
                style:{
                    text:"风扇转速",
                    textAlign:"center",
                    fill:"#fff",
                    fontSize:15
                }},
            series: [{

                type: 'pie',
                radius: ['60%', '70%'],
                color: '#29d08a',
                label: {
                    normal: {
                        position: 'center'
                    }
                },
                data: [{
                    value: v1,
                    name: '风扇转速',
                    label: {
                        normal: {
                            formatter: Math.round(v1 / v3 * 100) + '%',
                            textStyle: {
                                fontSize: 24,
                                color: '#fff',
                            }
                        }
                    }
                }, {
                    value: v2,
                    label: {
                        normal: {
                            formatter: function (params) {
                                return '风扇转速'
                            },
                            textStyle: {
                                color: '#aaa',
                                fontSize: 16
                            }
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: 'rgba(255,255,255,.2)'
                        },
                        emphasis: {
                            color: '#fff'
                        }
                    },
                }]
            }]
        };
        myChart.setOption(option);
        window.addEventListener("resize", function () {
            myChart.resize();
        });
        setTimeout(zb4, 3000);
    }
})



		
		
		


		









